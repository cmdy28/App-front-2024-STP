"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/(DashboardLayout)/page",{

/***/ "(app-pages-browser)/./src/app/(DashboardLayout)/conductores/components/tablaConductores.tsx":
/*!*******************************************************************************!*\
  !*** ./src/app/(DashboardLayout)/conductores/components/tablaConductores.tsx ***!
  \*******************************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _app_utils_api__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/app/utils/api */ \"(app-pages-browser)/./src/app/utils/api.ts\");\nvar _s = $RefreshSig$();\n\n\nconst PostList = ()=>{\n    _s();\n    // const [posts, setPosts] = useState<Post[]>([]);\n    // useEffect(() => {\n    //   const fetchPosts = async () => {\n    //     try {\n    //       const response = await get<ApiResponse>('/conductor');\n    //       setPosts(Object.values(response.data.data));\n    //       console.log(response.data.data);\n    //     } catch (error) {\n    //       console.error('Error fetching posts:', error);\n    //     }\n    //   };\n    //   fetchPosts();\n    // }, []);\n    const [conductores, setConductores] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        const fetchConductoresConDatosPersonales = async ()=>{\n            try {\n                // Primero, obtén la lista de conductores\n                const responseConductores = await (0,_app_utils_api__WEBPACK_IMPORTED_MODULE_1__.get)(\"/conductor\");\n                const conductoresData = Object.values(responseConductores.data.data);\n                // Ahora, obtén los datos personales para cada conductor\n                const conductoresConDatosPersonales = await Promise.all(conductoresData.map(async (conductor)=>{\n                    const responsePersona = await (0,_app_utils_api__WEBPACK_IMPORTED_MODULE_1__.get)(\"/persona/\".concat(conductor.id));\n                    const datosPersonales = responsePersona.data.data;\n                    console.log(datosPersonales);\n                    // Combina la información del conductor con sus datos personales\n                    return {\n                        ...conductor,\n                        datosPersonales\n                    };\n                }));\n                setConductores(conductoresConDatosPersonales);\n                console.log(conductoresConDatosPersonales);\n            } catch (error) {\n                console.error(\"Error fetching conductores con datos personales:\", error);\n            }\n        };\n        fetchConductoresConDatosPersonales();\n    }, []);\n// return (\n//   <DashboardCard title=\"Conductores\">\n//           <Box sx={{ overflow: 'auto', width: { xs: '280px', sm: 'auto' } }}>\n//               <Table\n//                   aria-label=\"simple table\"\n//                   sx={{\n//                       whiteSpace: \"nowrap\",\n//                       mt: 2\n//                   }}\n//               >\n//                   <TableHead>\n//                       <TableRow>\n//                           <TableCell>\n//                               <Typography variant=\"subtitle2\" fontWeight={600}>\n//                                   Id\n//                               </Typography>\n//                           </TableCell>\n//                           <TableCell>\n//                               <Typography variant=\"subtitle2\" fontWeight={600}>\n//                                   Nombre\n//                               </Typography>\n//                           </TableCell>\n//                           <TableCell>\n//                               <Typography variant=\"subtitle2\" fontWeight={600}>\n//                                   Licencia\n//                               </Typography>\n//                           </TableCell>\n//                           <TableCell>\n//                               <Typography variant=\"subtitle2\" fontWeight={600}>\n//                                   Priority\n//                               </Typography>\n//                           </TableCell>\n//                           <TableCell align=\"right\">\n//                               <Typography variant=\"subtitle2\" fontWeight={600}>\n//                                   Budget\n//                               </Typography>\n//                           </TableCell>\n//                       </TableRow>\n//                   </TableHead>\n//                   <TableBody>\n//                       {posts.map((post) => (\n//                           <TableRow key={post.id}>\n//                               <TableCell>\n//                                   <Typography\n//                                       sx={{\n//                                           fontSize: \"15px\",\n//                                           fontWeight: \"500\",\n//                                       }}\n//                                   >\n//                                       {post.id}\n//                                   </Typography>\n//                               </TableCell>\n//                               <TableCell>\n//                                   <Box\n//                                       sx={{\n//                                           display: \"flex\",\n//                                           alignItems: \"center\",\n//                                       }}\n//                                   >\n//                                       <Box>\n//                                           <Typography variant=\"subtitle2\" fontWeight={600}>\n//                                               {post.nombre}\n//                                           </Typography>\n//                                           <Typography\n//                                               color=\"textSecondary\"\n//                                               sx={{\n//                                                   fontSize: \"13px\",\n//                                               }}\n//                                           >\n//                                               {post.cedula}\n//                                           </Typography>\n//                                       </Box>\n//                                   </Box>\n//                               </TableCell>\n//                               <TableCell>\n//                                   <Typography color=\"textSecondary\" variant=\"subtitle2\" fontWeight={400}>\n//                                       {post.email}\n//                                   </Typography>\n//                               </TableCell>\n//                               <TableCell>\n//                                   <Chip\n//                                       sx={{\n//                                           px: \"4px\",\n//                                           backgroundColor: '',\n//                                           color: \"#fff\",\n//                                       }}\n//                                       size=\"small\"\n//                                       label={post.sexo}\n//                                   ></Chip>\n//                               </TableCell>\n//                               <TableCell align=\"right\">\n//                                   <Typography variant=\"h6\">${post.sexo}k</Typography>\n//                               </TableCell>\n//                           </TableRow>\n//                       ))}\n//                   </TableBody>\n//               </Table>\n//           </Box>\n//       </DashboardCard>\n// );\n};\n_s(PostList, \"PHtO4QH0FJjzpnyRG/GkklwXW8U=\");\n_c = PostList;\n/* harmony default export */ __webpack_exports__[\"default\"] = (PostList);\nvar _c;\n$RefreshReg$(_c, \"PostList\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/(DashboardLayout)/conductores/components/tablaConductores.tsx\n"));

/***/ })

});